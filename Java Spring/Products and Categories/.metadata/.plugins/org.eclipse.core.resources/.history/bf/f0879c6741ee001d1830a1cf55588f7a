package com.example.demo.models;

import java.util.Date;

import org.springframework.format.annotation.DateTimeFormat;

import jakarta.persistence.Column;
import jakarta.persistence.Entity;
import jakarta.persistence.GeneratedValue;
import jakarta.persistence.GenerationType;
import jakarta.persistence.Id;
import jakarta.persistence.PrePersist;
import jakarta.persistence.PreUpdate;
import jakarta.persistence.Table;
import jakarta.validation.constraints.NotEmpty;
import jakarta.validation.constraints.Size;

@Entity
@Table(name="products") 
public class Product {

    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    private Long id;
    
    @NotEmpty
    @Size(min=3, max=30)
    private String name;
    
    @NotEmpty
    @Size(min=3, max=30)
    private String lname;
    
    @NotEmpty
    @Size(min=3, max=30)
    private String pname;
    
    @NotEmpty
    @Size(min=3, max=30)
    private String cname;
    
    
    
    
    public Product(Long id, @NotEmpty @Size(min = 3, max = 30) String name,
			@NotEmpty @Size(min = 3, max = 30) String lname, @NotEmpty @Size(min = 3, max = 30) String pname,
			@NotEmpty @Size(min = 3, max = 30) String cname, Date createdAt, Date updatedAt) {
		this.id = id;
		this.name = name;
		this.lname = lname;
		this.pname = pname;
		this.cname = cname;
		this.createdAt = createdAt;
		this.updatedAt = updatedAt;
	}
	@Column(updatable=false)
    @DateTimeFormat(pattern="yyyy-MM-dd")
    private Date createdAt;
    @DateTimeFormat(pattern="yyyy-MM-dd")
    private Date updatedAt;
    
    
    public Product() {}
    
    

	@PreUpdate
    protected void onUpdate(){
        this.updatedAt = new Date();
    }
	@PrePersist
	protected void onCreate(){
		this.createdAt = new Date();
	}
}
