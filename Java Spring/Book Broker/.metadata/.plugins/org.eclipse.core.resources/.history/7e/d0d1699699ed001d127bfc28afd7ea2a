package com.example.demo.models;

import java.util.Date;

import org.springframework.format.annotation.DateTimeFormat;

import jakarta.persistence.Column;
import jakarta.persistence.Entity;
import jakarta.persistence.GeneratedValue;
import jakarta.persistence.GenerationType;
import jakarta.persistence.Id;
import jakarta.persistence.PrePersist;
import jakarta.persistence.PreUpdate;
import jakarta.persistence.Table;
import jakarta.validation.constraints.Email;
import jakarta.validation.constraints.Max;
import jakarta.validation.constraints.Min;
import jakarta.validation.constraints.NotEmpty;
import jakarta.validation.constraints.NotNull;
import jakarta.validation.constraints.Size;


@Entity
@Table(name="yys") //change the table name
public class YY {  //change the class name

    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    private Long id;
    
    @NotEmpty(message="Username is required!")
    @Size(min=3, max=30, message="Username must be between 3 and 30 characters")
    private String yyname;
    
    @NotEmpty(message="Email is required!")
    @Email(message="Please enter a valid email!")
    private String yyemail;
    
    @NotNull
    @Min(0)
    @Max(5)
    private Integer integer;
    
    @Column(updatable=false)
    @DateTimeFormat(pattern="yyyy-MM-dd")
    private Date createdAt;
    @DateTimeFormat(pattern="yyyy-MM-dd")
    private Date updatedAt;
    
    
    
    //----------------one to many(for the dojo)
//    @OneToMany(mappedBy="yy1", fetch = FetchType.LAZY)
//    private List<ZZ> zzs1;
    
//    @ManyToOne(fetch = FetchType.LAZY)  //(for the ninja) or (Middle Table)---(CategoryProduct,categories_products)
//    @JoinColumn(name="yy_id")
//    private YY yy1;
    //----------------one to many

    
    
    //----------------many to many
//    @ManyToMany(fetch = FetchType.LAZY)
//    @JoinTable(
//        name = "categories_products", 
//        joinColumns = @JoinColumn(name = "product_id"), 
//        inverseJoinColumns = @JoinColumn(name = "category_id")
//    )
//    private List<Category> categories;
    //----------------many to many
    
    
    
    //change the constructors----------------
    public YY() {} 
    //change the constructors----------------
    
    
    //add more here
    //---------------------------------
    //add more here
    
    
    //add getter and setter here
    //---------------------------------
    //add getter and setter here
    
    
    
    
    
    
    //----------------------------
	@PreUpdate
    protected void onUpdate(){
        this.updatedAt = new Date();
    }
	@PrePersist
	protected void onCreate(){
		this.createdAt = new Date();
	}
	//-----------------------------
  
}
    


