package com.example.demo.controllers;



import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.validation.BindingResult;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;

import com.example.demo.models.Book;
import com.example.demo.services.MainService;

import jakarta.servlet.http.HttpSession;
import jakarta.validation.Valid;




@Controller
public class MainController {
	 @Autowired
     private MainService mainService;

	
	@GetMapping("/bookmarket")
	public String bookmarket(Model model , HttpSession session) {
		List<Book> booksNotToken = mainService.findAllNullBook();
		List<Book> myFavBooks = mainService.findUser((Long) session.getAttribute("user_id")).getBooksFav();
		List<Book> myBooks = mainService.findUser((Long) session.getAttribute("user_id")).getBooks();

		session.setAttribute("user_fav_id", 0);
//		List<Book> booksNotToken = mainService.getDojosWhereIdQQ(null);
		// User user1 = mainService.findUser(null);
		System.out.println(booksNotToken);
		System.out.println(session.getAttribute("user_id"));
		 model.addAttribute("booksNotToken", booksNotToken);
		return "bookmarket.jsp";
	}
	
	
	@GetMapping("/books/new")
	public String createBook(Model model , HttpSession session,@ModelAttribute("book") Book book) {
//		Long user_id = (Long) session.getAttribute("user_id");
//		model.addAttribute("user_id", user_id);
		return "new_book.jsp";
	}
	
	@PostMapping("/books/new")
	public String createBook1( HttpSession session,@Valid @ModelAttribute("book") Book book, BindingResult result, Model model) {
		if (result.hasErrors()) {
            model.addAttribute("book", book);
            return "new_book.jsp";
        } else {
            mainService.createBook(book);
            return "redirect:/books/new";
        }
	}
	
	
	@GetMapping("/books/{id}/edit")
	public String updateBook1(Model model , HttpSession session,@ModelAttribute("book") Book book,@PathVariable("id") Long id) {
		Book book1 = mainService.findBook(id);
//		Long user_id = (Long) session.getAttribute("user_id");
		model.addAttribute("book1", book1);
		return "updatebook.jsp";
	}
	
	@PostMapping("/books/{id}/edit")
	public String updateBook2( HttpSession session,@Valid @ModelAttribute("book") Book book, BindingResult result, Model model,@PathVariable("id") Long id) {
		if (result.hasErrors()) {
            model.addAttribute("book", book);
    		Book book1 = mainService.findBook(id);
//    		Long user_id = (Long) session.getAttribute("user_id");
    		model.addAttribute("book1", book1);
            return "updatebook.jsp";
        } else {
            mainService.createBook(book);
            return "redirect:/books/"+ id +"/edit";
        }
	}
	
	
	
	
	
}
